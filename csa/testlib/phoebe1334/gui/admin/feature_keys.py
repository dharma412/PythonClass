#!/usr/bin/env python -tt
# $Id: //prod/main/sarf_centos/testlib/phoebe1350/gui/admin/feature_keys.py#1 $ $DateTime: 2020/01/06 01:25:43 $ $Author: saurgup5 $

from common.gui.decorators import go_to_page, set_speed
from common.gui.guicommon import GuiCommon


SUBMIT_KEY_BUTTON = "//input[@value='Submit Key']"
KEY_INPUT_FIELD = "//input[@id='enter_fk']"
CHECK_FOR_NEW_KEYS_BUTTON = "//input[@value='Check for New Keys']"

KEYS_TABLE = "//table[@class='cols']"
HEADER_NAMES = "%s/tbody/tr[th]/th" % (KEYS_TABLE,)
# idx starts from 1
HEADER_BY_IDX = lambda idx: "%s[%d]" % (HEADER_NAMES, idx)
KEY_ROWS = "%s/tbody/tr[td]" % (KEYS_TABLE,)
CELL_BY_IDX = lambda row_idx, col_idx: "%s/tbody/tr[td][%d]/td[%d]" % \
                                (KEYS_TABLE, row_idx, col_idx)


PAGE_PATH = ('System Administration', 'Feature Keys')
class FeatureKeys(GuiCommon):
    """Keywords for ESA GUI interaction with System Administration -> Feature
    Keys page
    """

    def get_keyword_names(self):
        return ['feature_keys_get_details',
                'feature_keys_activate']

    @go_to_page(PAGE_PATH)
    @set_speed(0)
    def feature_keys_get_details(self):
        """Get information about feature keys currently present on appliance

        *Return:*
        Dictionary. Keys are column names and values are lists of column cells,
        for example:
        | { Description: [u'Outbreak Filters', u'IronPort Anti-Spam', u'Sophos Anti-Virus',
        u'Incoming Mail Handling', u'IronPort Email Encryption',
        u'RSA Email Data Loss Prevention', u'McAfee'], |
        | Expiration Date: [u'11 May 2013 23:21 (GMT -07:00)', u'11 May 2013 23:21 (GMT -07:00)',
        u'16 May 2013 18:19 (GMT -07:00)', u'11 May 2013 23:22 (GMT -07:00)', u'N/A', u'N/A', u'N/A'], |
        | Status: [u'Active', u'Active', u'Active', u'Active', u'Dormant', u'Dormant', u'Dormant'], |
        | Time Remaining: [u'25 days', u'25 days', u'29 days', u'25 days', u'25 days',
        u'25 days', u'25 days'] } |

        *Examples:*
        | ${details}= | Feature Keys Get Details |
        | Log Dictionary | ${details} |
        | ${headers}= | Get Dictionary Keys | ${details} |
        | Log List | ${headers} |
        """
        result = {}
        headers_count = int(self.get_matching_xpath_count(HEADER_NAMES))
        keys_count = int(self.get_matching_xpath_count(KEY_ROWS))
        for col_idx in xrange(1, headers_count + 1):
            header = self.get_text(HEADER_BY_IDX(col_idx)).strip()
            result[header] = []
            for row_idx in xrange(1, keys_count + 1):
                cell_text = self.get_text(CELL_BY_IDX(row_idx, col_idx)).strip()
                result[header].append(cell_text)
        return result

    @go_to_page(PAGE_PATH)
    def feature_keys_activate(self, activation_key):
        """Activates particular appliance feature using given feature key.
        An exception will be raised if incorrect activation key is entered.

        *Parameters:*
        - `activation_key`: activation key string. May be generated by the
        `Generate DUT Feature Key` keyword defined in the esa/backdoor_snippets.txt
        resource

        *Examples:*
        | ${valid_fkey}= | Generate DUT Featurekey | sophos |
        | Feature Keys Activate | ${valid_fkey} |
        """
        self.input_text(KEY_INPUT_FIELD, activation_key)
        self.click_button(SUBMIT_KEY_BUTTON)
        self._check_action_result()

