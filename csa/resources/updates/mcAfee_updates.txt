# $Id: //prod/main/sarf_centos/resources/updates/mcAfee_updates.txt#2 $
# $DateTime: 2019/06/03 22:56:07 $
# $Author: revlaksh $

*** Settings ***
Variables  constants.py
Resource   wsa/global.txt
Resource   updates/updater.txt

*** Variables ***
${MCAFEE_UPDATE_FILES_URL}         http://install.eng.sgg.cisco.com/pub/Mcafee_64bit/
${MCAFEE_UPDATE_PATH}              mcafee/5/engine-6-i386/default 

*** Keywords ***
Get MCAFEE Updates From Server
    [Documentation]  Get updates from http://install.eng.sgg.cisco.com/pub/Mcafee_64bit/
    [Arguments]  ${update_file_name}
    Login To Updater  ${update_server_address}  ${update_server_user}  ${update_server_pass}
    Write To CLI And Return Output  cd /tmp
    Write To CLI And Return Output  wget ${MCAFEE_UPDATE_FILES_URL}${update_file_name}
    ${out}=  Write To CLI And Return Output  ls
    Should Contain  ${out}  ${update_file_name}
    ${out}  Write To CLI And Return Output  md5sum ${update_file_name}
    ${MCAFEE_UPDATE_FILE_MD5}  Fetch From Left  ${out}  \ \ ${update_file_name}
    Set Suite Variable  ${MCAFEE_UPDATE_FILE_MD5}

Generate MCAFEE Update
    [Documentation]  Generate update on update server
    [Arguments]  ${file}  ${update_uid}  ${updater_cli_user}  ${updater_cli_pass}
    ${update}=  Run  date "+%s"
    Set Suite Variable  ${MY_TIMESTAMP}  ${update}
    Login To Updater CLI  ${updater_cli_user}  ${updater_cli_pass}
    Write To CLI And Return Output  files.upload_nfs
    Write To CLI And Return Output  ${update_uid}
    Write To CLI And Return Output  ${MY_TIMESTAMP}
    Write To CLI And Return Output  ${MCAFEE_UPDATE_FILE_MD5}
    Write To CLI And Return Output  /tmp/${file}
    Write To CLI And Return Output  ${MCAFEE_UPDATE_NAME}
    Print Newline Characters  3
    Set SSHLib Prompt  \$
    Write To CLI And Return Output  exit

Generate And Update MCAFEE
    [Documentation]  Generate AVC update and waint until update applied\n
    # The ${UPDATE_FILE_NAME} variable - is a name of file with updates.
    # The ${UPDATE_NAME} variable will be displayed on Acceptable Use Controls page as
    # number of "Current Version". You need to pass both of these variables as parameters of `pybot_run`
    [Arguments]  ${update_file_name}=${MCAFEE_UPDATE_FILE_NAME}
    ...  ${update_server_address}=${UPDATE_SERVER}
    ...  ${update_server_user}=${TESTUSER}
    ...  ${update_server_pass}=${TESTUSER_PASSWORD}
    ...  ${updater_cli_user}=${DUT_ADMIN}
    ...  ${updater_cli_pass}=${DUT_ADMIN_PASSWORD}
    ...  ${update_uid}=${MCAFEE_UPDATE_PATH}
    Update Settings Edit  enable_auto_update=${False}
    Run Keyword And Ignore Error  Commit Changes
    Update Config Dynamic Host  dynamic_host=${UPDATE_SERVER}:443
    Update Config Validate Certificates  validate=no
    Commit
    ${update}=  Run  date "+%s"
    Set Suite Variable  ${MY_TIMESTAMP}  ${update}
    Run keyword if  '${UPDATE_PROVISIONING}' == 'Y'
    ...  Run keywords  Get MCAFEE Updates From Server  ${update_file_name}
    ...  AND  Generate MCAFEE Update  ${update_file_name}  ${update_uid}  ${updater_cli_user}  ${updater_cli_pass}
    Update Now
    Wait Until Keyword Succeeds  300s  10s  Verify McAfee Version

Verify McAfee Version
    ${new_version}=  Version
    Log   Version of WSA is ${new_version}
    ${mcAfee_version}=  Catenate  McAfee Anti-Malware Engine:  ${MCAFEE_UPDATE_NAME}
    Should Contain  ${new_version}  ${mcAfee_version}

Remove Files
    [Documentation]  Remove test update files
    Write To CLI And Return Output  rm -f /tmp/${MCAFEE_UPDATE_FILE_NAME}
    Remove Update From Updater  ${MCAFEE_UPDATE_PATH}  ${DUT_ADMIN}  ${DUT_ADMIN_PASSWORD}
    Close Connection
