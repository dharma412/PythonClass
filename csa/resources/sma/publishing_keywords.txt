# $Id: //prod/main/sarf_centos/resources/sma/publishing_keywords.txt#1 $
# $DateTime: 2019/03/22 01:36:06 $
# $Author: aminath $

*** Settings ***
Resource    regression.txt
Variables   constants.py
Variables   network.py

*** Variables ***
# Custom URLs
${CURL1}   testCustomUrlCat3
${CURL2}   testCustomUrlCat4
${CURL3}   cat1
${CURL4}   dog2

# Time Ranges
${TR1}   testCustomTR3
${TR2}   testCustomTR4
${TR3}   holidays

# Realms
${LDAP}   myLdapRealm
${NTLM}   myNtlmRealm

# For SAAS
@{METADATA}                test.com    Entity   http://test.com
@{SAML_USERNAME_MAPPING}   Fixed Rule mapping   %s@example.com
@{SAML_ATTR_MAPPING}       saml: ldap
${SAAS_NAME}               myAppPolicy

${WSA1_NAME}   WSA1
${WSA2_NAME}   WSA2
${WSA3_NAME}   WSA3
${WSA4_NAME}   WSA4

${CONFIG_PATH}           /data/pub/configuration
${SMA_DEFAULT_CONFIG}    sma_publish_default_config.xml
${WSA_DEFAULT_CONFIG}    wsa_publish_default_config.xml
${WSA2_DEFAULT_CONFIG}   wsa2_publish_default_config.xml

${CM}   CM77
${SMA_1}
${WSA_1}
${WSA_2}

*** Keywords ***
DefaultPublishSuiteSetup
    [Arguments]  ${WSA1_VERSION}=WSA_77_1  ${WSA2_VERSION}=WSA_77_2   ${CM}=CM77
    Set Suite Variable  ${WSA1_VERSION}  ${WSA1_VERSION}
    Set Suite Variable  ${WSA2_VERSION}  ${WSA2_VERSION}
    Set Suite Variable   ${CM}   ${CM}
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus78'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_78
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus80'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_80
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus81'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_81
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus82'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_82
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus835'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_83
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus836'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_83
    Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus84'
    ...  Set Suite Variable  ${SMA_VERSION}  SMA_84

    Assign Appliances To Variables
    ...  ${SMA_VERSION}  ${WSA1_VERSION}  ${WSA2_VERSION}
    DefaultRegressionSuiteSetup
    Run Keyword  Library Order ${${SMA_VERSION}}
    Selenium Close
    Correct Log Patterns
    Disable SSW In Test Setup
    Enable Policies On WSA1
    Enable Policies On WSA2
    Enable Policies On SMA
    Selenium Close

DefaultPublishTestCaseSetup
    DefaultRegressionTestCaseSetup
    Load Config WSA1
    Load Config WSA2
    Load Config SMA

DefaultPublishTestCaseTeardown
    Selenium Close
    Run Keyword  Library Order ${${SMA_VERSION}}
    Selenium Close
    DefaultRegressionTestCaseTeardown

DefaultPublishSuiteTeardown
    Run Keyword  Library Order ${${WSA1_VERSION}}
    Restart Cli Session
    Run Keyword  Library Order ${${WSA2_VERSION}}
    Restart Cli Session
    DefaultRegressionSuiteTeardown

Enable Centralized Web Services
    Centralized Web Reporting Enable
    Centralized Web Configuration Manager Enable
    Run Keyword And Ignore Error
    ...  Configuration Masters Initialize   ${sma_config_masters.${CM}}   ${True}
    Commit Changes
    ...  Centralized Web Services enabled.

Add WSA A And WSA B To CM
    Security Appliances Add Web Appliance
    ...  ${WSA1_NAME}
    ...  ${${${WSA1_VERSION}}}
    ...  iccm=${True}
    ...  ssh_credentials=admin:Cisco123$
    ...  config_master=${sma_config_masters.${CM}}

    Security Appliances Add Web Appliance
    ...  ${WSA2_NAME}
    ...  ${${${WSA2_VERSION}}}
    ...  iccm=${True}
    ...  ssh_credentials=admin:Cisco123$
    ...  config_master=${sma_config_masters.${CM}}

    Commit Changes
    ...  WSA '${${${WSA1_VERSION}}}' and '${${${WSA2_VERSION}}}' added to CM77.

    Sleep  30s
    ...  Waiting for getting realms from WSA to SMA

Establish connection to WSA A And WSA B
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Security Appliances Edit Web Appliance
    ...  ${WSA1_NAME}
    ...  ssh_credentials=admin:Cisco123$
    ...  config_master=${sma_config_masters.${CM}}

    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Security Appliances Edit Web Appliance
    ...  ${WSA2_NAME}
    ...  ssh_credentials=admin:Cisco123$
    ...  config_master=${sma_config_masters.${CM}}

    Commit Changes

    Sleep  1m
    ...  Waiting for getting realms from WSA to SMA

Abandon Tests Changes
    Run Keyword And Ignore Error   Abandon Changes

Create Realms
    Authentication Add LDAP Realm  ${LDAP}
    ...           ${LDAP_AUTH_SERVER}
    ...           supp_edir=${True}
    ...           base_dn=${LDAP_BIND_BASE_DN}
    ...           uname_attr=${USER_NAME_ATTR}

Enable HTTPS Proxy
    [Arguments]  ${version}=75
    Run Keyword If  '${version}'<'77'  Https Proxy Enable  https_apps_decryption=${True}
    Run Keyword If  '${version}'>='77'  Https Proxy Enable  enable_decryption_app=${True}
    #Https Proxy Enable  https_apps_decryption=${True}


Get Wsa Version Digits
    [Arguments]  ${WSA_VERSION}
    ${value}  Should Match Regexp  ${WSA_VERSION}  \\d{2,3}
    [Return]  ${value}

Add Upstream proxy
    Upstream Proxy Add Group     upstream2
    ...    ${FTP_UPSTREAM_PROXY}:${FTP_UPSTREAM_PROXY_PORT}:2

Enable External DLP
    External DLP Servers Edit Servers
    ...    ${HTTP_SERVER}%2323%2%icap://${HTTP_SERVER}:2323/reqmod

Create Identities
    Identities Add Policy     i2     description=This identity required LDAP authentication     auth_method=requires
    ...    auth_realm=${LDAP}

Enable AVC
    AVC Enable

Enable SAAS
    Saas Enable  domain_name=test.com   entity_id=test.com

    Saas Policies Add Saas Application
    ...     ${SAAS_NAME}
    ...     ${METADATA}
    ...     description=test saas app
    ...     auth_realm=${LDAP}
    ...     saas_sso_authentication_prompt=Transparently
    ...     saml_username_mapping=${SAML_USERNAME_MAPPING}
    ...     saml_attribute_mapping=${SAML_ATTR_MAPPING}
    ...     authentication_context=TimeSyncToken

Enable SAAS On SMA
    Run Keyword   ${CM} Saas Policies Add Saas Application
    ...  ${SAAS_NAME}
    ...  ${METADATA}
    ...  description=test saas app
    ...  auth_realm=${LDAP}
    ...  saas_sso_authentication_prompt=Transparently
    ...  saml_username_mapping=${SAML_USERNAME_MAPPING}
    ...  saml_attribute_mapping=${SAML_ATTR_MAPPING}
    ...  authentication_context=TimeSyncToken
    Commit Changes
    ...  Default SaaS policy added to have Service Provider for Identity Provider after publishing.

Set Feature Key For URL Filtering
    Run Keyword And Ignore Error
    ...  Feature Key Set Key
    ...  cato
    Commit

Enable Policies On WSA1
    Selenium Close
    Run Keyword  Library Order ${${WSA1_VERSION}}
    Selenium Login
    Create Realms
    ${version}  Get Wsa Version Digits  ${WSA1_VERSION}
    Enable HTTPS Proxy  ${version}
    Add Upstream proxy
    Enable External DLP
    Create Identities
    Enable AVC
    Enable SAAS
    Commit Changes
    Selenium Close
    Set Feature Key For URL Filtering
    Run Keyword And Ignore Error  Run On DUT  rm ${CONFIG_PATH}/${WSA_DEFAULT_CONFIG}
    Save Config  name=${WSA_DEFAULT_CONFIG}
    Run On DUT  chmod a+r ${CONFIG_PATH}/${WSA_DEFAULT_CONFIG}

Enable Policies On WSA2
    Run Keyword  Library Order ${${WSA2_VERSION}}
    Selenium Login
    Create Realms
    ${version}  Get Wsa Version Digits  ${WSA2_VERSION}
    Enable HTTPS Proxy  ${version}
    Add Upstream proxy
    Enable External DLP
    Create Identities
    Enable AVC
    Enable SAAS
    Commit Changes
    Selenium Close
    Set Feature Key For URL Filtering
    Run Keyword And Ignore Error   Run On DUT   rm ${CONFIG_PATH}/${WSA2_DEFAULT_CONFIG}
    Save Config   name=${WSA2_DEFAULT_CONFIG}
    Run On DUT  chmod a+r ${CONFIG_PATH}/${WSA2_DEFAULT_CONFIG}

Enable Policies On SMA
    Run Keyword  Library Order ${${SMA_VERSION}}
    Selenium Login
    Enable Centralized Web Services
    Add WSA A And WSA B To CM
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Enable SAAS On SMA
    Run Keyword And Ignore Error  Run On DUT  rm ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}
    ${conf_file}  Save Config
    Run On DUT  mv ${CONFIG_PATH}/${conf_file} ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}
    Selenium Close
    Run On DUT  chmod a+r ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}

Load Config WSA1
    Run Keyword  Library Order ${${WSA1_VERSION}}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Load Config  ${WSA_DEFAULT_CONFIG}
    Commit

Load Config WSA2
    Run Keyword  Library Order ${${WSA2_VERSION}}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Load Config  ${WSA2_DEFAULT_CONFIG}
    Commit

Load Config SMA
    Run Keyword  Library Order ${${SMA_VERSION}}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Load Config From File  ${SMA_DEFAULT_CONFIG}
    Commit

Correct Log Patterns
    Append Excluded Patterns To Default List
    ...  ${${${SMA_VERSION}}_ERROR_PATTERNS}
    ...  '-v -E "*Critical: Access error:*access denied*"'
    Append Excluded Patterns To Default List
    ...  ${${${WSA1_VERSION}}_ERROR_PATTERNS}
    ...  '-v -E "*Critical: Access error:*access denied*"'
    Append Excluded Patterns To Default List
    ...  ${${${WSA2_VERSION}}_ERROR_PATTERNS}
    ...  '-v -E "*Critical: Access error:*access denied*"'

Disable SSW In Test Setup
    Set Suite Variable  ${SSW}  ${False}
