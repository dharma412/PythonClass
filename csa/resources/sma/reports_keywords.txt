# $Id: //prod/main/sarf_centos/resources/sma/reports_keywords.txt#2 $
# $DateTime: 2019/06/07 02:16:22 $
# $Author: sarukakk $

*** Settings ***
Resource    regression.txt

*** Variables ***
${INIT_DATE}     01/01/2004 01:01:00
${CUSTOM_DATE}   01/01/2010 01:01:00   #  date with format "MM/DD/YYYY HH:MM:SS"

${CONFIG_PATH}       /data/pub/configuration
${SMA_DEFAULT_CONFIG}    sma_report_default_config.xml
${WSA_DEFAULT_CONFIG}    wsa_report_default_config.xml
${DATE_CHANGED}    ${False}
${FIRST_IDENTITY}  Test
${ACCESS_POLICY}   TestAccessPolicy

@{WSA_FEATURE_KEYS}    avc  https  l4tm  mcafee  mus  sophos  wbrs  webroot  proxy  cato
@{RANGE_COUNT}         day   1   week   3   30 days   4   90 days   5   yesterday  1   previous month  2   custom   1
@{SMA_FEATURE_KEYS}    c_web_rep_processing   iccm_processing   master_isq   cloud   c_rep_processing   c_track_processing

${HTTP_SERVER_USER}  testuser
${HTTP_SERVER_PASS}  ironport

${L4TM_ENABLED}      ${False}
${ADD_L4TM_ENABLED}  ${False}
${ADD_REMOTE_REQS}   ${False}

${L4TM_SITE}       qa10.qa
${L4TM_SITE_IP}    10.92.145.210
${CM1}     CM115
${Submit_xpath}  //input[@value='Submit']
${json_file} =  /usr/lib/python2.7/site-packages/selenium/webdriver/firefox/webdriver_prefs.json
${DOWNLOAD_DIR} =  /home/testuser/Downloads

*** Keyword ***
# --- Default setups and teardowns ---
DefaultReportSuiteSetup
    [Arguments]  ${regular_requests}=${True}  ${remote_requests}=${False}  ${l4tm}=${False}  ${CM}=CM110
    DefaultRegressionSuiteSetup
    Open Connection  ${HTTP_SERVER}
    Login   ${RTESTUSER}    ${RTESTUSER_PASSWORD}
    Write  mkdir -p /usr/local/www/apache22/data/test-data/SSE/merlin
    Copy File To HTTP Server  src_file=TrojanSpy.Win32.Banker3.exe  user=${RTESTUSER}  pass=${RTESTUSER_PASSWORD}  loc=/usr/local/www/apache22/data/test-data/SSE/merlin/
    Set Suite Variable  ${CM}
    Set Suite Variable  ${LDAP_REPORTING_USER}  ${LDAP_USER}
    Set Suite Variable  ${LDAP_REPORTING_USER_PASSWORD}  ${LDAP_USER_PASSWORD}
    Library Order SMA
    Selenium Close
    Correct Log Patterns
    Disable SSW In Test Setup
    Library Order SMA
    Configure Appliances
    ${IP} =  Set Variable If  '${IPV_PARAM}'=='-6'  ${CLIENT_IPV6}  ${CLIENT_IP}
    Set Suite Variable  ${IP}
    Set Suite Variable  ${ADD_REMOTE_REQS}   ${remote_requests}
    Set Suite Variable  ${ADD_L4TM_ENABLED}  ${l4tm}
    Run Keyword If  ${regular_requests}
    ...  Generate Reports Data
    Run Keyword If  ${l4tm}
    ...  Generate L4TM Data
    Selenium Login With Autodownload Enabled

DefaultReportTestCaseSetup
    DefaultRegressionTestCaseSetup

DefaultReportTestCaseTeardown
    DefaultRegressionTestCaseTeardown

DefaultReportSuiteTeardown
    Run Keyword If  ${L4TM_ENABLED}
    ...  Disable L4TM
    Set Correct Time
    DefaultRegressionSuiteTeardown

# --- general useful keywords ---
Selenium Login With Autodownload Enabled
	[Arguments]  ${download_folder}=${TEMP_DIR}  ${mime_types}=text/csv,application/pdf,application/xml,text/xml
    
    Library Order Sma
    Setup Selenium Environment
    Configure Autodownload For Browser   ${download_folder}   ${mime_types}
    Launch DUT Browser  autodownload=True  download_folder=${download_folder}
    Log Into DUT

Correct Log Patterns
    Append Excluded Patterns To Default List
    ...  ${SMA_ERROR_PATTERNS}
    ...  '-v -E "*Critical: Access error:*access denied*"'
    Append Excluded Patterns To Default List
    ...  ${WSA_ERROR_PATTERNS}
    ...  '-v -E "*Critical: Access error:*access denied*"'

Disable SSW In Test Setup
    Set Suite Variable  ${SSW}  ${False}

# --- keywords for configuring appliances ---
Configure Appliances
    Library Order Wsa
    ${wsa_conf_exists}   Dut File Exists  ${CONFIG_PATH}/${WSA_DEFAULT_CONFIG}
    Library Order Sma
    ${sma_conf_exists}   Dut File Exists  ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}
    ${conf_exists}   Evaluate   ${wsa_conf_exists} and ${sma_conf_exists}
    Run Keyword Unless  ${conf_exists}
    ...   Configure Web Appliance For Web Reports   ${SMA}   ${WSA}
    Run Keyword If  ${conf_exists}
    ...   Load Configs

Load Configs
    Library Order Wsa
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Load Config  ${WSA_DEFAULT_CONFIG}
    Commit

    Library Order Sma
    Wait Until Keyword Succeeds
    ...  5 min
    ...  15 s
    ...  Load Config From File  ${SMA_DEFAULT_CONFIG}
    Commit

    Selenium Login
    Run Keyword And Ignore Error   Configuration Masters Initialize    ${sma_config_masters.${CM}}   ${True}
    Wait Until Keyword Succeeds  7m  1m  Security Appliances Edit Web Appliance
    ...  WSA1
    ...  ssh_credentials=${DUT_ADMIN}:${DUT_ADMIN_SSW_PASSWORD}
    ...  config_master=${sma_config_masters.${CM}}
    Commit Changes
    Selenium Close

    Sleep  30s
    ...  Waiting for getting realms from WSA to SMA

Configure Test LDAP On WSA Appliance
    [Arguments]    ${WSA}   ${realm_name}
    Library Order WSA
    Selenium Login
    Run Keyword And Ignore Error    Authentication Delete Realm    ${realm_name}
    Authentication Add Ldap Realm   ${realm_name}
    ...           ${LDAP_AUTH_SERVER}
    ...           base_dn=${LDAP_BASE_DN}
    ...           uname_attr=${USER_NAME_ATTR}
    ...           run_test=${False}
    Commit Changes
    Selenium Close
    Library Order Sma

Block Editing Wikipedia
    [Arguments]  ${policy_name}
    ${temp}=  Get Substring  ${CM}  0  -1
    ${len}=  Get Length  ${temp}
    ${temp1}=  Run Keyword If  ${len}<4  Get Substring  ${temp}  -1
    ${temp1}=  Run Keyword If  ${len}==4  Get Substring  ${temp}  -2
    ${temp2}=  Get Substring  ${CM}  -1
    ${CM_link}=  Catenate  SEPARATOR=.  ${temp1}  ${temp2}
    Navigate To
    ...  Web
    ...  Configuration Master ${CM_link}
    ...  Access Policies
    # edit AVC for the policy
    Click Link
    ...  xpath=//a[contains(@href,'avc?action=FormEdit') and contains(@href,'${policy_name}')]
    # expanding "Collaboration" group
    Click Element
    ...  xpath=//a[contains(@href,"avc_objects['17'].expand")]
    ...  don't wait
    # expanding actions
    Click Link
    ...  app_action_descr_1152
    ...  don't wait
    # selecting "Monitor" radio button
    Select Radio Button
    ...  settings[1152][action]
    ...  scan
    # selecting "Block Posting Text" checkbox
    Select Checkbox
    ...  behaviors_1152_206
    # click Apply
    Click Button
    ...  button_submit_actions_1152
    ...  don't wait
    # click Submit
    Click Button
    ...  Submit

Configure Web Appliance For Web Reports
    [Arguments]   ${SMA}   ${WSA}
    [Documentation]    Enabling Centralized reporting on WSA
    Library Order Wsa
    Selenium Login
    Wait Until Keyword Succeeds  5m  1m  Wbrs And Anti Malware Edit Settings   sophos=${False}
    Commit Changes
    Selenium Close
    Reporting Config Centralized    enable=yes
    Commit
    [Documentation]    Configuring LDAP
    Configure Test LDAP On WSA Appliance    ${WSA}   TestLDAPRealm
    [Documentation]   Configure AnyConnect
    Configure AnyConnect On WSA Appliance   ${HTTP_SERVER}
    [Documentation]    Configuring WSA by Configuration Master of SMA
    Library Order Sma
    Reporting Config Setup    enable_web=yes
    ${WSA_IP}=    Get Host IP By Name   ${WSA}
    Run Keyword And Ignore Error   Appliance Config Delete   WSA1
    Commit
    Selenium Login
    Centralized Web Configuration Manager Enable
    Configuration Masters Initialize    ${sma_config_masters.${CM}}   ${True}
    #Run Keyword If  '${SMA_LIB_VERSION}' == 'zeus1250'
    #...   Configuration Masters Initialize    ${sma_config_masters.${CM1}}   ${True}
    Wait Until Keyword Succeeds  7m  1m  Security Appliances Add Web Appliance
    ...   WSA1
    ...   ${WSA_IP}
    ...   reporting=${True}
    ...   config_master=${sma_config_masters.${CM}}
    ...   ssh_credentials=${DUT_ADMIN}:${DUT_ADMIN_SSW_PASSWORD}
    Commit Changes
    Run Keyword And Ignore Error   Run Keyword  ${CM} Identities Delete Policy   ${FIRST_IDENTITY}
    Security Services Display Edit Cm Settings
    ...     ${sma_config_masters.${CM}}
    ...     https_proxy=${False}
    ...     socks_proxy=${False}
    ...     upstream_proxy_groups=${False}
    ...     sophos_anti_malware=${False}
    ...     end_user_ack=${False}
    ...     external_dlp_servers=${False}
    ...     credential_encryption=${False}
    ...     identity_provider_for_saas=${False}
    Run Keyword  ${CM} Identities Add Policy
    ...     ${FIRST_IDENTITY}
    ...     auth_method=requires
    ...     auth_realm=TestLDAPRealm
    Run Keyword  ${CM} Access Policies Add
    ...     ${ACCESS_POLICY}
    ...     identity=${FIRST_IDENTITY}
    Run Keyword And Ignore Error   Run Keyword  ${CM} Custom Url Categories Delete   Test
    Run Keyword  ${CM} Custom Url Categories Add
    ...     Test
    ...     sites=badsite.com
    Run Keyword  ${CM} Access Policies Edit Url Categories
    ...     ${ACCESS_POLICY}
    ...     Test:block
    Run Keyword  ${CM} Access Policies Edit Applications
    ...     ${ACCESS_POLICY}
    ...     actions=${applications.YOUTUBE}:block::
    Run Keyword  Block Editing Wikipedia
    ...     ${ACCESS_POLICY}
    Run Keyword  ${CM} Access Policies Edit Anti Malware And Reputation
    ...     ${ACCESS_POLICY}
    ...     amw_categories=${mwcats.VIRUS}:block
    Commit Changes
    Publish To Web Appliances Configuration Master Now   myjob  ${sma_config_masters.${CM}}  WSA1
    Selenium Close

    Library Order Sma
    Run On DUT  rm -rf ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}
    ${conf_file}  Save Config
    Run On DUT  mv ${CONFIG_PATH}/${conf_file} ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}
    Run On DUT  chmod a+r ${CONFIG_PATH}/${SMA_DEFAULT_CONFIG}

    Library Order Wsa
    Run Keyword And Ignore Error  Run On DUT  rm ${CONFIG_PATH}/${WSA_DEFAULT_CONFIG}
    Save Config  name=${WSA_DEFAULT_CONFIG}
    Run On DUT  chmod a+r ${CONFIG_PATH}/${WSA_DEFAULT_CONFIG}

    Library Order Sma

Configure AnyConnect On WSA Appliance
    [Arguments]    ${REMOTE_CLIENT_HOST}
    ${REMOTE_CLIENT_IP}=   Get Host IP By Name     ${REMOTE_CLIENT_HOST}
    Library Order WSA
    Selenium Login
    ACSM Enable
    ...     user=ip
    ...     user_info=${REMOTE_CLIENT_IP}
    Commit Changes
    Selenium Close
    Library Order SMA

# --- keywords for generating reporting data ---
Generate Reports Data
    Library Order WSA
    Wait Until Ready
    Set WSA Time  ${INIT_DATE}
    Set Feature Keys  @{WSA_FEATURE_KEYS}
    Clear Web Reporting Data   ${SMA}   ${WSA}

    ${run_delay}=  Set Variable  3600
    # for Custom Range
    Make Test Requests For Time
    ...  ${CUSTOM_DATE}
    # for prev month
    ${prev_month}  Get SMA Date
    ...  -v-1m "+%m/01/%Y 00:00:00"
    Make Test Requests For Time
    ...  ${prev_month}
    # for 30 days
    ${shift_time30d}  Evaluate   30*24*3600-${run_delay}
    ${time30d}   Get SMA Date
    ...  -v-${shift_time30d}S "+%m/%d/%Y %H:%M:%S"
    Make Test Requests For Time
    ...  ${time30d}
    # for week
    ${shift_time1w}   Evaluate   7*24*3600-${run_delay}
    ${time1w}   Get SMA Date
    ...  -v-${shift_time1w}S "+%m/%d/%Y %H:%M:%S"
    Make Test Requests For Time
    ...  ${time1w}
    # for yesterday
    ${yesterday}   Get SMA Date
    ...  -v-86400S "+%m/%d/%Y 00:00:00"
    Make Test Requests For Time
    ...  ${yesterday}
    # for day
    ${current_date}   Get SMA Date
    ...  "+%m/%d/%Y %H:%M:%S"
    Make Test Requests For Time
    ...  ${current_date}

    # shifting time to force data transfer to SMA
    ${report_time}  Get SMA Date
    ...  -v+30M "+%m/%d/%Y %H:%M:%S"
    Library Order WSA
    Set WSA Time   ${report_time}
    Sleep  2m
    Set Current Time

    Set Suite Variable  ${DATE_CHANGED}  ${False}

    Run Keyword And Ignore Error  Wait For Web Data Download  ${SMA}  ${WSA}
    Library Order Sma

Clear Web Reporting Data
    [Arguments]  ${SMA}  ${WSA}
    Library Order Wsa
    Roll Over Now
    Commit
    Diagnostic Reporting Delete Db  confirm=yes
    Wait Until Ready
    Library Order Sma
    Start Cli Session If Not Open
    Roll Over Now
    Commit
    Diagnostic Reporting Delete Db  confirm=yes
    Wait Until Ready

Set Feature Keys
    [Arguments]  @{FEATURE_KEYS}
    :FOR  ${fkey}  IN  @{FEATURE_KEYS}
    \  Run Keyword And Ignore Error
    \  ...  Feature Key Set Key
    \  ...  ${fkey}
    Commit

Make Test Requests For Time
    [Arguments]  ${datetime}
    Library Order Wsa
    Set WSA Time  ${datetime}
    Set Suite Variable  ${DATE_CHANGED}  ${True}
    Make Test Requests  ${False}
    Run Keyword If  ${ADD_REMOTE_REQS}
    ...  Make Test Requests  ${True}
    Wait Until Ready

Make Test Requests
    [Arguments]  ${remotely}=${False}
    ${URL} =  Set Variable If  '${IPV_PARAM}'=='-6'  http://ipv6.google.com  http://www.google.com
    Set Suite Variable  ${URL}
    Set Global Variable  ${remote_req}  ${remotely}
    Make Test Request
    ...  http://www.youtube.com
    Make Test Request
    ...  ${URL}
    ...  (302|200)
    Make Test Request
    ...  http://ihaveabadreputation.com
    Make Test Request
    ...  http://en.wikipedia.org/w/index.php?title=Software_testing\\&action=edit
    Make Test Request
    ...  http://${HTTP_SERVER}/test-data/SSE/merlin/TrojanSpy.Win32.Banker3.exe
    Make Test Request
    ...  http://badsite.com
    Set Global Variable  ${remote_req}  ${False}

Make Test Request
    [Arguments]   ${URL}  ${status}=403
    Wait Until Ready
    ${baseline_log}=    Filter Log Create Baseline  ${ACCESS_LOGS}
    Run Keyword Unless  ${remote_req}
    ...  Make Requests   proxy=${WSA}:80  proxy_user=${LDAP_REPORTING_USER}:${LDAP_REPORTING_USER_PASSWORD}  url=${URL}
    Run Keyword If  ${remote_req}
    ...  Wait Until Ready
    Run Keyword If  ${remote_req}
    ...  Make Requests   proxy=${WSA}:80  proxy_user=${LDAP_REPORTING_USER}:${LDAP_REPORTING_USER_PASSWORD}  url=${URL}
    ...  remote_client=${HTTP_SERVER}:${HTTP_SERVER_USER}:${HTTP_SERVER_PASS}
    Wait Until Ready
    Filter Access Log Check  ${baseline_log}  .*${status}.*

Make Remote Command
    [Arguments]   ${command}  ${REMOTE_HOST}  ${REMOTE_USER}  ${REMOTE_PASS}
    SSHLibrary.Open Connection    ${REMOTE_HOST}
    SSHLibrary.Login    ${REMOTE_USER}    ${REMOTE_PASS}
    ${out}  SSHLibrary.Execute Command  ${command}
    SSHLibrary.Close Connection
    [Return]  ${out}

Get SMA Date
    [Arguments]  ${args}
    Library Order SMA
    ${return_val}  Run On Dut   date ${args}
    [Return]  ${return_val}

Set New Time
    [Arguments]  ${date_time}
    Restart Cli Session
    Wait Until Ready
    Set Time Set  ${date_time}
    ${curdatetime}=  Run On Dut  date -j "+%m/%d/%Y %H:%M:%S"
    ${curtime}=  Run On Dut  date -j -f "%m/%d/%Y %H:%M:%S" "${curdatetime}" "+%s"
    ${exptime}=  Run On Dut  date -j -f "%m/%d/%Y %H:%M:%S" "${date_time}" "+%s"
    Should Be True   abs(${curtime}-${exptime})<60
    ...  Date '${date_time}' was not set correctly. Current time is '${curdatetime}'.

Set WSA Time
    [Arguments]  ${date_time}
    Wait Until Ready
    Run Keyword And Ignore Error  Run On Dut   killall -HUP trafmon
    Run On Dut   killall -HUP reportd
    Run On Dut   killall -HUP configdefragd
    Wait Until Ready
    Wait Until Keyword Succeeds
    ...  10 min
    ...  1 min
    ...  Set New Time   ${date_time}
    # Sleep  1m
    Run Keyword And Ignore Error  Run On Dut   killall -HUP trafmon
    Run On Dut   killall -HUP reportd
    Run On Dut   killall -HUP configdefragd
    Wait Until Ready
    # Sleep  30s

Set Current Time
    ${current_time}  Get SMA Date
    ...  "+%m/%d/%Y %H:%M:%S"
    Library Order WSA
    Set WSA Time  ${current_time}

Set Correct Time
    Run Keyword If  ${DATE_CHANGED}
    ...  Set Current Time
    Library Order SMA

Check Report Data
    Web Reporting Open
    ...  Overview
    Web Reporting Check Cell Value
    ...  Web Proxy Summary
    ...  Total Transactions\:
    ...  Transactions
    ...  >0

Generate L4TM Data
    Library Order WSA
    Wait Until Ready
    Set WSA Time  ${INIT_DATE}
    Set Feature Keys  @{WSA_FEATURE_KEYS}
    Disable Identity
    Clear Web Reporting Data   ${SMA}   ${WSA}
    Configure L4TM

    ${L4TM_SITE_IP}=  Get Host IP By Name  ${L4TM_SITE}

    ${run_delay}=  Set Variable  3600
    # for Custom Range
    Make L4TM Requests For Time
    ...  ${CUSTOM_DATE}
    # for 90 days
    ${shift_time90d}  Evaluate   90*24*3600-${run_delay}
    ${time90d}   Get SMA Date
    ...  -v-${shift_time90d}S "+%m/%d/%Y %H:%M:%S"
    Make L4TM Requests For Time
    ...  ${time90d}
    # for prev month
    ${prev_month}  Get SMA Date
    ...  -v-1m "+%m/01/%Y 00:00:00"
    Make L4TM Requests For Time
    ...  ${prev_month}
    # for 30 days
    ${shift_time30d}  Evaluate   30*24*3600-${run_delay}
    ${time30d}   Get SMA Date
    ...  -v-${shift_time30d}S "+%m/%d/%Y %H:%M:%S"
    Make L4TM Requests For Time
    ...  ${time30d}
    # for week
    ${shift_time1w}   Evaluate   7*24*3600-${run_delay}
    ${time1w}   Get SMA Date
    ...  -v-${shift_time1w}S "+%m/%d/%Y %H:%M:%S"
    Make L4TM Requests For Time
    ...  ${time1w}
    # for yesterday
    ${yesterday}   Get SMA Date
    ...  -v-86400S "+%m/%d/%Y 00:00:00"
    Make L4TM Requests For Time
    ...  ${yesterday}
    # for day
    ${current_date}   Get SMA Date
    ...  "+%m/%d/%Y %H:%M:%S"
    Make L4TM Requests For Time
    ...  ${current_date}

    # shifting time to force data transfer to SMA
    ${report_time}  Get SMA Date
    ...  -v+14M "+%m/%d/%Y %H:%M:%S"
    Library Order WSA
    Set WSA Time   ${report_time}
    Sleep  2m
    Set Current Time

    Set Suite Variable  ${DATE_CHANGED}  ${False}

    Enable Identity

    Library Order Sma
    Selenium Login
    Wait Until Keyword Succeeds
    ...   40 min
    ...   1 min
    ...  Check L4TM Data

Disable Identity
    Library Order Wsa
    Selenium Login
    Identities Disable Policy  ${FIRST_IDENTITY}
    Commit Changes
    Selenium Close

Enable Identity
    Library Order Wsa
    Selenium Login
    Identities Enable Policy  ${FIRST_IDENTITY}
    Commit Changes
    Selenium Close

Configure L4TM
    [Documentation]    Add Data Interface
    Library Order Wsa
    Selenium Login
    ${status}  ${msg}  Run Keyword and Ignore Error
    ...  Ip Interfaces Add  p1
    ...  ${WSA_P1_IP}  ${WSA_P1_NETMASK}  ${WSA_P1}
    Run Keyword If  '${status}'!='PASS'
    ...  Ip Interfaces Edit  p1
    ...  ${WSA_P1_IP}  ${WSA_P1_NETMASK}  ${WSA_P1}
    Ip Interfaces Edit Settings   restrict_m=${True}
    Routes Setgateway  ${WSA_P1_GW}  Data
    Run Keyword and Ignore Error  Routes Add  Client   ${CLIENT_SUBNET}   ${WSA_CLIENT_GW}   Data
    L4TM Edit   malware_action=block   suspected=${L4TM_SITE}
    Commit Changes
    Selenium Close

Make L4TM Requests For Time
    [Arguments]  ${datetime}
    Library Order Wsa
    Set WSA Time  ${datetime}
    Set Suite Variable  ${DATE_CHANGED}  ${True}
    Enable L4TM
    ${blocked_before}=  Traf Mon Baseline
    Run    curl ${IPV_PARAM} -D - --proxy ${WSA_P1}:80 --url ${L4TM_SITE} -o /dev/null
    Wait Until Keyword Succeeds
    ...  10 min
    ...  10 s
    ...  Traf Mon Check  2  ${blocked_before}
    Disable L4TM
    Wait Until Ready

Traf Mon Baseline
    ${lines_before}=  Run On Dut
    ...  grep -c "Firewall blocked" /data/pub/trafmonlogs/tmon_misc.current
    ${lines_before}=  Convert To Integer  ${lines_before}
    [Return]  ${lines_before}

Traf Mon Check
    [Arguments]  ${expected_count}  ${baseline}
    ${baseline}=  Convert To Integer  ${baseline}
    ${expected_count}=  Convert To Integer  ${expected_count}
    ${expected_lines_after}=  Evaluate  ${baseline}+${expected_count}
    ${lines_after}=  Run On Dut
    ...  grep -c "Firewall blocked" /data/pub/trafmonlogs/tmon_misc.current
    ${lines_after}=  Convert To Integer  ${lines_after}
    Should Be Equal  ${expected_lines_after}  ${lines_after}

Enable L4TM
    [Arguments]  ${client}=${None}  ${appliance}=${WSA}
    Set Suite Variable  ${L4TM_ENABLED}   ${True}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Enable Tap  server_hostname=${appliance}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Set L4   data   server_hostname=${appliance}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Set Slot   client_hostname=${client}  server_hostname=${appliance}
    Sleep  30s

Disable L4TM
    [Arguments]  ${client}=${None}  ${appliance}=${WSA}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Unset Slot  client_hostname=${client}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Set L4   none   server_hostname=${appliance}
    Wait Until Keyword Succeeds
    ...  5 min
    ...  10 s
    ...  Disable Tap  server_hostname=${appliance}
    Set Suite Variable  ${L4TM_ENABLED}   ${False}

Check L4TM Data
    Web Reporting Open
    ...  Overview
    Web Reporting Check Cell Value
    ...  L4 Traffic Monitor Summary
    ...  Suspect Connections Detected
    ...  Connections
    ...  >0

# --- keywords for verifying CSV reports ---
Verify Section CSV
    [Arguments]  ${section_name}  ${expected_headers}  ${expected_rows_count}  @{expected_items}

    # table
    ${csv_table}=  Get CSV Table
    ...   ${section_name}

    # verify header
    Verify CSV Headers
    ...  ${csv_table}
    ...  ${expected_headers}

    # verify number of rows
    Verify CSV Rows Count
    ...  ${csv_table}
    ...  ${expected_rows_count}

    # verify items
    :FOR  ${row}  ${header}  ${value}  IN  @{expected_items}
    \  Verify CSV Item
    \  ...  ${csv_table}
    \  ...  ${row}  ${header}
    \  ...  ${value}

Get CSV Table
    [Arguments]  ${section_name}
    ${filename}=    Web Reporting Section Export
    ...  ${section_name}
    ${csv_table}=   Get Table From CSV File
    ...  ${filename}
    OperatingSystem.Remove File  ${filename}
    [Return]  ${csv_table}

Get Table From CSV File
    [Arguments]  ${filename}
    ${filecontent}=  OperatingSystem.Get File
    ...  ${filename}
    @{lines}=  Split To Lines  ${filecontent}
    @{csv_table}=  Create List
    :FOR  ${line}  IN  @{lines}
    \  @{splitted_line}=  Split String  ${line}  ,
    \  Append To List  ${csv_table}  ${splitted_line}
    [Return]  ${csv_table}

Verify CSV Headers
    [Arguments]  ${act_array}  ${expected}
    ${act_headers}=  Evaluate   map(lambda x: x.strip(), ${act_array}[0])
    ${exp_headers}=  Evaluate   map(lambda x: x.strip(), ${expected})
    Should Be Equal
    ...  ${act_headers}
    ...  ${exp_headers}
    ...  Incorrect headers were present in csv file.

Verify CSV Rows Count
    [Arguments]  ${array}  ${expected}
    ${actual}  Evaluate  len(${array})-1
    ${actual}=  Convert To Integer  ${actual}
    ${expected}=  Convert To Integer  ${expected}
    Run Keyword If  ${expected} < ${actual}  Fail  msg=Expected Number of rows '${expected}' is less than actual '${actual}'

Verify CSV Item
    [Arguments]  ${array}  ${row}  ${column_name}  ${expected}
    [Documentation]   Check item in CSV array.
    ...   `row`: number of a row in CSV file;
    ...   `column_name`: name of column in CSV file;
    ...   `expected`: exact expected value or a criterion for the value (like '>0', '<10').

    ${column}=  Get Index From List   ${array[0]}   ${column_name}
    ${actual}=  Set Variable   ${array[${row}][${column}]}
    ${condition}=  Set Variable If   '${expected}'[0]=='>' or '${expected}'[0]=='<'
    ...  ${actual}${expected}   '${actual}'=='${expected}'
    ${satisfy}=  Evaluate  ${condition}
    Should Be True   ${satisfy}
    ...  '${column_name}' column had '${actual}' instead of '${expected}'.

Get Expected Count For Time Range
    [Arguments]  ${time_range}  ${base_count}=1
    [Documentation]  Calculates expected requests number for specified time range.
    ...   `time_range`:  time range should be: 'day', 'week,' '30 days', '90 days', 'yesterday', 'previous month', 'custom'
    ...   `base_count`:  number of requests in one day.

    ${current_hour}  Run On Dut  date "+%H"
    ${current_day}   Run On Dut  date "+%d"
    ${current_hour}  Evaluate  int('${current_hour}')
    ${current_day}   Evaluate  int('${current_day}')

    ${range_count_dict}=  Create Dictionary   @{RANGE_COUNT}

    ${expected_count}=  Convert To Integer  ${range_count_dict['${time_range}']}

    # correct expectation if requests for yesterday are also visible
    ${expected_count}  Set Variable If
    ...   '${time_range}'=='day' and ${current_hour}<1
    ...   ${${expected_count}+1}
    ...   ${expected_count}

    # correct expectation if requests for previous month are also visible
    ${expected_count}  Set Variable If
    ...   '${time_range}'=='30 days' and ${current_hour}<1 and ${current_day}<=1
    ...   ${expected_count}+1
    ...   ${expected_count}

    # correct expectation if requests for 'week' are also visible
    ${expected_count}  Set Variable If
    ...   '${time_range}'=='previous month' and ${current_day} <= 7
    ...   ${${expected_count}+1}
    ...   ${expected_count}

    # correct expectation if requests for 'yesterday' are also visible
    ${expected_count}  Set Variable If
    ...   '${time_range}'=='previous month' and ${current_day} <= 1
    ...   ${${expected_count}+1}
    ...   ${expected_count}

    ${expected_count}  Evaluate   ${expected_count}*${base_count}

    [Return]  ${expected_count}
