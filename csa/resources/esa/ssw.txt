# $Id: //prod/main/sarf_centos/resources/esa/ssw.txt#1 $
#$DateTime: 2019/03/22 01:36:06 $
#$Author: aminath $

*** Settings ***
Variables    esa_intf.py   ${ESA}
Variables    network.py
Library      EsaGuiLibrary
Library      EsaCliLibrary
Library      Collections
Library      String
Library      UtilsLibrary  ${ESA}
Resource     selenium.txt

*** Keywords ***
# Keywords to run System Setup Wizard (SSW)

Setup Dut For IPV4 With Data2 Interface
    #Creating Data1 interface object
    ${data1_obj}=  Interface Object Create  ip_address=${ESA_DATA1_IP}
    ...  cidr_netmask=${ESA_DATA1_CIDR}  hostname=${ESA_DATA1}
    ...  domain_dest_pairs=${DATA1_DOM_DEST}
    #Creating Data2 interface object
    ${data2_obj}=  Interface Object Create  ip_address=${ESA_DATA2_IP}
    ...  cidr_netmask=${ESA_DATA2_CIDR}  hostname=${ESA_DATA2}
    ...  mail_servers=${DATA2_RELAY_MAILS}
    #Creating Mgmt interface object
    ${mgmt_obj}=  Interface Object Create  ip_address=${ESA_IP}
    ...  cidr_netmask=${ESA_CIDR}  hostname=${ESA}
    # Run SSW
    SSW Run  ${EMAIL_ALERTS}  accept_license=${True}
    ...  scheduled_report_rcpts=${DELIVER_REPORTS}  region=${REGION}
    ...  country=${COUNTRY}  timezone=${TIME_ZONE}  ntp_server=${NTP}
    ...  enable_sbnp=${False}  enable_auto_support=${False}
    ...  hostname=${ESA}  admin_password=${ADMIN_PW}  gateway=${ESA_GW}
    ...  dns_servers=${DNS}  mgmt_obj=${mgmt_obj}
    ...  data1_obj=${data1_obj}  data2_obj=${data2_obj}
    ...  enable_sbrs=${True}  antivirus_types=${None}
    ...  as_type_isq_pairs=${None}  enable_vof=${False}

Setup Dut For IPV4 Without Data2 Interface
    #Creating Data1 interface object
    ${data1_obj}=  Interface Object Create  ip_address=${ESA_DATA1_IP}
    ...  cidr_netmask=${ESA_DATA1_CIDR}  hostname=${ESA_DATA1}
    ...  domain_dest_pairs=${DATA1_DOM_DEST}
    #Creating Mgmt interface object as Outgoing Mail interface
    ${mgmt_obj}=  Interface Object Create  ip_address=${ESA_IP}
    ...  cidr_netmask=${ESA_CIDR}  hostname=${ESA}
    ...  mail_servers=${DATA2_RELAY_MAILS}
    # Run SSW
    SSW Run  ${EMAIL_ALERTS}  accept_license=${True}
    ...  scheduled_report_rcpts=${DELIVER_REPORTS}  region=${REGION}
    ...  country=${COUNTRY}  timezone=${TIME_ZONE}  ntp_server=${NTP}
    ...  enable_sbnp=${False}  enable_auto_support=${False}
    ...  hostname=${ESA}  admin_password=${ADMIN_PW}  gateway=${ESA_GW}
    ...  dns_servers=${DNS}  data1_obj=${data1_obj}
    ...  data2_obj=${mgmt_obj}  enable_sbrs=${True}
    ...  antivirus_types=${None}  as_type_isq_pairs=${None}  enable_vof=${False}

Setup Dut For IPV6 With Data2 Interface
    #Creating Data1 interface object
    ${data1_obj}=  Interface Object Create  ip_address=${ESA_DATA1_IP}
    ...  cidr_netmask=${ESA_DATA1_CIDR}  hostname=${ESA_DATA1}
    ...  ipv6_address=${ESA_DATA1_IPv6}  ipv6_netmask=${ESA_DATA1_IPv6_PREFIX}
    ...  domain_dest_pairs=${DATA1_DOM_DEST}
    #Creating Data2 interface object
    ${data2_obj}=  Interface Object Create  ip_address=${ESA_DATA2_IP}
    ...  cidr_netmask=${ESA_DATA2_CIDR}  hostname=${ESA_DATA2}
    ...  ipv6_address=${ESA_DATA2_IPv6}  ipv6_netmask=${ESA_DATA2_IPv6_PREFIX}
    ...  mail_servers=${DATA2_RELAY_MAILS}
    #Creating Mgmt interface object
    ${mgmt_obj}=  Interface Object Create  ip_address=${ESA_IP}
    ...  cidr_netmask=${ESA_CIDR}  hostname=${ESA}
    ...  ipv6_address=${ESA_IPv6}  ipv6_netmask=${ESA_IPv6_PREFIX}
    # Run SSW
    SSW Run  ${EMAIL_ALERTS}  accept_license=${True}
    ...  scheduled_report_rcpts=${DELIVER_REPORTS}  region=${REGION}
    ...  country=${COUNTRY}  timezone=${TIME_ZONE}  ntp_server=${NTP}
    ...  enable_sbnp=${False}  enable_auto_support=${False}
    ...  hostname=${ESA}  admin_password=${ADMIN_PW}  gateway=${ESA_GW}
    ...  ipv6_gateway=${ESA_IPv6_GW}  dns_servers=${DNS}
    ...  mgmt_obj=${mgmt_obj}  data1_obj=${data1_obj}
    ...  data2_obj=${data2_obj}  enable_sbrs=${True}
    ...  as_type_isq_pairs=${None}  antivirus_types=${None}  enable_vof=${False}

Setup Dut For IPV6 Without Data2 Interface
    #Creating Data1 interface object
    ${data1_obj}=  Interface Object Create  ip_address=${ESA_DATA1_IP}
    ...  cidr_netmask=${ESA_DATA1_CIDR}  hostname=${ESA_DATA1}
    ...  ipv6_address=${ESA_DATA1_IPv6}  ipv6_netmask=${ESA_DATA1_IPv6_PREFIX}
    ...  domain_dest_pairs=${DATA1_DOM_DEST}
    #Creating Mgmt interface object as Outgoing Mail interface
    ${mgmt_obj}=  Interface Object Create  ip_address=${ESA_IP}
    ...  cidr_netmask=${ESA_CIDR}  hostname=${ESA}
    ...  ipv6_address=${ESA_IPv6}  ipv6_netmask=${ESA_IPv6_PREFIX}
    ...  mail_servers=${DATA2_RELAY_MAILS}
    # Run SSW
    SSW Run  ${EMAIL_ALERTS}  accept_license=${True}
    ...  scheduled_report_rcpts=${DELIVER_REPORTS}  region=${REGION}
    ...  country=${COUNTRY}  timezone=${TIME_ZONE}  ntp_server=${NTP}
    ...  enable_sbnp=${False}  enable_auto_support=${False}
    ...  hostname=${ESA}  admin_password=${ADMIN_PW}  gateway=${ESA_GW}
    ...  ipv6_gateway=${ESA_IPv6_GW}  dns_servers=${DNS}
    ...  data1_obj=${data1_obj}  data2_obj=${mgmt_obj}
    ...  enable_sbrs=${True}  enable_vof=${False}
    ...  as_type_isq_pairs=${None}  antivirus_types=${None}

Configure Update Proxy
    [Arguments]  ${dut_prefix}=ESA
    Update Config Setup
    ...  use_proxy=YES
    ...  proxy_server=${${dut_prefix}_PROXY}
    ...  use_https_proxy=YES
    ...  https_proxy_server=${${dut_prefix}_HTTPS_PROXY}

SSW Run And Save Config
    [Documentation]  This does the following:
    ...  /nConfigures ESA via SSW
    ...  /nUpdates http & https proxy server if
    ...  /nSaves a copy of this configuration on the ESA
    ${DATA1_DOM_DEST}  Create List  .${NETWORK}:${CLIENT}
    ${DATA2_RELAY_MAILS}  Create List  172.0.0.0/8  10.0.0.0/8
    ${DNS}  Create List  ${ESA_DNS}
    Set Suite Variable  ${DATA1_DOM_DEST}
    Set Suite Variable  ${DATA2_RELAY_MAILS}
    Set Suite Variable  ${DNS}
    ${D2_Exists}  ${Reason}  Run Keyword And Ignore Error
    ...  Variable Should Exist  ${ESA_DATA2}
    Selenium Login
    Run Keyword If  '${D2_Exists}'=='PASS' and '${INET_MODE.lower()}'=='ipv4'
    ...  Setup Dut For IPV4 With Data2 Interface
    Run Keyword If  '${D2_Exists}'=='FAIL' and '${INET_MODE.lower()}'=='ipv4'
    ...  Setup Dut For IPV4 Without Data2 Interface
    Run Keyword If  '${D2_Exists}'=='PASS' and '${INET_MODE.lower()}'=='ipv6'
    ...  Setup Dut For IPV6 With Data2 Interface
    Run Keyword If  '${D2_Exists}'=='FAIL' and '${INET_MODE.lower()}'=='ipv6'
    ...  Setup Dut For IPV6 Without Data2 Interface
    Selenium Close
    ${saved_config}=  Save Config  no
    Run on DUT  mv /data/pub/configuration/${saved_config} /data/pub/configuration/${SSW_CFG_FILE}

    # TODO -> Delete smtproutes, disable NTP & alert mail

Setup DUT Via SSW
    [Arguments]  ${force_ssw}=${False}
    [Documentation]  Run SSW or restore from config file backup if present
    ...  /nIf force_ssw=${True}, SSW is launched even when config file exists
    Set Suite Variable  ${SKIP_SSW}  ${False}
    Set Suite Variable  ${SSW_CFG_FILE}  ssw_config.xml
    ${config_exists}=  DUT File Exists  /data/pub/configuration/${SSW_CFG_FILE}
    ${load_config}=  Evaluate  ${config_exists} and not ${force_ssw}
    Run Keyword If  ${load_config}  SSW Load From Config File
    Run Keyword Unless  ${SKIP_SSW}  SSW Run And Save Config

SSW Load From Config File
    [Documentation]  Loads configuration from file ${SSW_CFG_FILE}
    ...  /nIf the operation succeeds, set ${True} to ${SKIP_SSW}
    ${pass_fail}  ${details}  Run Keyword And Ignore Error
    ...  Load Config From File  ${SSW_CFG_FILE}
    Run Keyword If  '${pass_fail}' == "PASS"
    ...  Set Suite Variable  ${SKIP_SSW}  ${True}
    Run Keyword If  '${pass_fail}' == "PASS"
    ...  Commit  comment=Restored configuration from ${SSW_CFG_FILE}

# Keywords to run System Setup in CLI
CLI Configure Data Interface
    [Arguments]  ${dut_prefix}  ${data_iface_name}
    # netmask=${ESA_DATA1_CIDR}
    # using system-proposed netmask
    # due to bug 84384
    Run Keyword If  '${MODE}'=='ipv4'
    ...  System Setup Configure Interface
         ...  ethernet=${data_iface_name}
         ...  enable=yes
         ...  nickname=${${dut_prefix}_${data_iface_name.upper()}}
         ...  enable_ipv4=YES
         ...  ipv4=${${dut_prefix}_${data_iface_name.upper()}_IP}
         ...  netmask=${${dut_prefix}_${data_iface_name.upper()}_NETMASK}
         ...  enable_ipv6=NO

    Run Keyword If  '${MODE}'=='ipv6'
    ...  System Setup Configure Interface
         ...  ethernet=${data_iface_name}
         ...  enable=yes
         ...  nickname=${${dut_prefix}_${data_iface_name.upper()}}
         ...  enable_ipv4=YES
         ...  ipv4=${${dut_prefix}_${data_iface_name.upper()}_IP}
         ...  netmask=${${dut_prefix}_${data_iface_name.upper()}_NETMASK}
         ...  enable_ipv6=YES
         ...  ipv6=${${dut_prefix}_${data_iface_name.upper()}_IPv6}
         ...  prefix=${${dut_prefix}_${data_iface_name.upper()}_IPv6_PREFIX}

Is Data Interface Present
    [Arguments]  ${dut_prefix}  ${index}
    ${exists}  ${Reason}  Run Keyword And Ignore Error
    ...  Variable Should Exist  \${${dut_prefix}_DATA${index}}
    [Return]  ${exists}

Get Inet Mode
    [Return]  ${INET_MODE.lower()}

Get All Data Interfaces
    [Arguments]  ${dut_prefix}
    @{list}=  Create List
    FOR  ${index}  IN RANGE  1  100
        ${var}=  Is Data Interface Present  ${dut_prefix}  ${index}
        Run Keyword If  '${var}' == 'FAIL'  Exit For Loop
        Run Keyword If  '${var}' == 'PASS'  Append to List  ${list}  data${index}
    END
    [Return]  ${list}

Route Alerts To /dev/null
    @{user_and_domain}=  Split String  ${EMAIL_ALERTS}  @
    ${ALERTS_DOMAIN}=  Get From List  ${user_and_domain}  -1
    Set Suite Variable  ${ALERTS_DOMAIN}
    Smtp Routes New
    ...  domain=${ALERTS_DOMAIN}
    ...  dest_hosts=/dev/null

Does Dut Belong To C1XX Series?
    ${result}  ${message}  Run Keyword And Ignore Error
    ...  Should Match Regexp  ${DUT_MODEL}  ^C1\\d{2,3}$
    ${dut_belongs_to_c1xx_model}=  Set Variable If  """${result}""" == """PASS"""
    ...  ${True}  ${False}
    [Return]  ${dut_belongs_to_c1xx_model}

Configure Network Interfaces On Models Other Than C1XX
    [Arguments]  ${dut_prefix}=ESA
    Run Keyword If  '${MODE}'=='ipv4'
    ...  System Setup Configure Interface
         ...  ethernet=management
         ...  hostname=${${dut_prefix}}
         ...  enable_ipv4=YES
         ...  ipv4=${${dut_prefix}_IP}
         ...  netmask=${${dut_prefix}_CIDR}
         ...  enable_ipv6=NO

    Run Keyword If  '${MODE}'=='ipv6'
    ...  System Setup Configure Interface
         ...  ethernet=management
         ...  hostname=${${dut_prefix}}
         ...  enable_ipv4=YES
         ...  ipv4=${${dut_prefix}_IP}
         ...  netmask=${${dut_prefix}_CIDR}
         ...  enable_ipv6=YES
         ...  ipv6=${${dut_prefix}_IPv6}
         ...  prefix=${${dut_prefix}_IPv6_PREFIX}

    @{data_interfaces}=  Get All Data Interfaces  ${dut_prefix}
    FOR  ${data_interface}  IN  @{data_interfaces}
        CLI Configure Data Interface  ${dut_prefix}  ${data_interface}
    END

Configure Network Interfaces On C1XX Models
    [Arguments]  ${dut_prefix}=ESA
    System Setup Configure Interface
    ...  ethernet=management
    ...  nickname=Management
    ...  hostname=${${dut_prefix}}
    ...  enable_ipv4=YES
    ...  ipv4=${${dut_prefix}_IP}
    ...  netmask=${${dut_prefix}_CIDR}
    ...  enable_ipv6=NO
    ...  assign_second_ip=YES
    ...  second_nickname=${${dut_prefix}_DATA1}
    ...  second_enable_ip4=YES
    ...  second_ipv4_address=${${dut_prefix}_DATA1_IP}
    ...  second_ipv4_netmask=${${dut_prefix}_DATA1_NETMASK}
    ...  second_enable_ipv6=NO

Run System Setup Via CLI
    [Arguments]  ${dut_prefix}=ESA  @{varargs}
    [Documentation]  Configure ESA via CLI. The 'dut_prefix' variable is required if running 'systemsetup' when there are several ESA boxes or ESA+SMA.
    ${RELAY_MAILS}   Set Variable   ${ESA_RELAY_HOSTS}
    ${PUBLIC_LISTENER_NAME}  Set Variable  InBoundMail
    ${PRIVATE_LISTENER_NAME}  Set Variable  OutBoundMail
    ${MODE}  Get Inet Mode
    Set Suite Variable  ${RELAY_MAILS}
    Set Suite Variable  ${PUBLIC_LISTENER_NAME}
    Set Suite Variable  ${PRIVATE_LISTENER_NAME}
    Set Suite Variable  ${MODE}

    ${dut_belongs_to_c1xx_model}=  Does Dut Belong To C1XX Series?
    ${is_data2_present}=  Is Data Interface Present  ${dut_prefix}  2

    Run Keyword If  '${dut_belongs_to_c1xx_model}' == 'True'
    ...  Configure Network Interfaces On C1XX Models  ${dut_prefix}
    Run Keyword If  '${dut_belongs_to_c1xx_model}' == 'False'
    ...  Configure Network Interfaces On Models Other Than C1XX  ${dut_prefix}

    Run Keyword If  '${MODE}'=='ipv4'
    ...  System Setup Configure Router
         ...  enable_gw_ipv4=YES
         ...  gw_ipv4=${${dut_prefix}_GW}
         ...  enable_gw_ipv6=NO

    Run Keyword If  '${MODE}'=='ipv6'
    ...  System Setup Configure Router
         ...  enable_gw_ipv4=YES
         ...  gw_ipv4=${${dut_prefix}_GW}
         ...  enable_gw_ipv6=NO
         ...  enable_gw_ipv6=YES
         ...  gw_ipv6=${${dut_prefix}_IPv6_GW}

    System Setup Configure Cluster
    ...  create_cluster=No, configure as standalone

    System Setup Configure Web
    ...  use_web_interface=YES
    ...  use_https=YES

    System Setup Configure Dns
    ...  dns_server=Use my own DNS servers
    ...  dns_ip=${${dut_prefix}_DNS}
    ...  use_another_dns_server=NO

    ${public_interface}=  Set Variable If  '${dut_belongs_to_c1xx_model}' == 'True'
    ...  Management  ${${dut_prefix}_DATA1}
    System Setup Configure Listener
    ...  listener_type=public
    ...  name=${PUBLIC_LISTENER_NAME}
    ...  use_rate_limiting=yes
    ...  rate_limiting=${EMPTY}
    ...  interface=${public_interface}
    ...  domain_or_email=.${NETWORK}
    ...  use_smtp_route=NO
    ...  use_senderbase=yes

    System Setup Configure Hat
    ...  hat_type=public
    ...  change_hat_policy=NO

    ${private_interface}=  Set Variable If  '${dut_belongs_to_c1xx_model}' == 'True'
    ...  ${${dut_prefix}_DATA1}  ${${dut_prefix}_DATA2}
    Run Keyword If  '${is_data2_present}' == 'PASS'
    ...  System Setup Configure Listener
         ...  listener_type=private
         ...  use_relay_mail_for_int_hosts=YES
         ...  name=${PRIVATE_LISTENER_NAME}
         ...  use_rate_limiting=NO
         ...  rate_limiting=${EMPTY}
         ...  interface=${private_interface}
         ...  relay_mail=${RELAY_MAILS}

    Run Keyword If  '${is_data2_present}' == 'FAIL'
    ...  System Setup Configure Listener
         ...  listener_type=private
         ...  use_relay_mail_for_int_hosts=YES
         ...  name=${PRIVATE_LISTENER_NAME}
         ...  use_rate_limiting=NO
         ...  interface=${${dut_prefix}_DATA1}
         ...  relay_mail=${RELAY_MAILS}
         ...  port=26

    System Setup Configure Hat
    ...  hat_type=private
    ...  change_hat_policy=NO

    ${use_as}=  Set Variable If  ${SMART_LICENSE_NEW_USER} == 1
    ...  NO  YES
    ${use_av}=  Set Variable If  ${SMART_LICENSE_NEW_USER} == 1
    ...  NO  YES
    ${use_vof}=  Set Variable If  ${SMART_LICENSE_NEW_USER} == 1
    ...  NO  YES

    System Setup Configure Scanning Engines
    ...  use_as=${use_as}
    ...  default_as_engine=IronPort Anti-Spam
    ...  use_av=${use_av}
    ...  default_av_engine=Sophos Anti-Virus
    ...  use_vof=${use_vof}
    ...  share_senderbase_stats=NO

    System Setup Configure Alerts And Reports
    ...  alert_email=${EMAIL_ALERTS}
    ...  use_autosupport=NO
    ...  shcheduled_reports_email=${DELIVER_REPORTS}

    Route Alerts To /dev/null

    System Setup Configure Time Settings
    ...  continent=${REGION}
    ...  country=${COUNTRY}
    ...  timezone=${TIME_ZONE}
    ...  ntp_ip_or_host=${NTP}

    System Setup Run  @{varargs}

