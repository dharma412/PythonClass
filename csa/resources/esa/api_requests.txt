# $Id: //prod/main/sarf_centos/resources/esa/api_requests.txt#1 $ $DateTime: 2019/03/22 01:36:06 $ $Author: aminath $

*** Settings ***
Resource     esa/injector.txt
Resource     esa/global.txt
Library    Collections

*** Variables ***
${API_HTTPS_port}=  8443
${API_HTTP_port}=  8080
${QUARANTINE1}=  user-quarantine
${INCOMING_CF1}=  contfilt1
${INCOMING_CF2}=  contfilt2
${OUTGOING_CF1}=  obfilter
${ENC_PROFILE_NAME1}=  test_encryption_profile_name
${DLP_POLICY1}=  dlp_credit_card
${DB_FILE_NAME}=  reporting
${DB_DIR}=  /home/testuser
${FILE_SERVER_IP}=  vm30bsd0153.ibqa

*** Keywords ***
Stop Reporting Services
   Heimdall Stop  app_name=reportd_helper
   Heimdall Stop  app_name=reportqueryd
   Heimdall Stop  app_name=counterd
   Heimdall Stop  app_name=reportd

Start Reporting Services
   Heimdall Start  app_name=reportd_helper
   Heimdall Start  app_name=reportqueryd
   Heimdall Start  app_name=counterd
   Heimdall Start  app_name=reportd

Port Reporting DB
   Stop Reporting Services
   Run On DUT  mv /data/db/reporting /data/db/reporting.orig
   scp 	from_host=${FILE_SERVER_IP}  from_location=${DB_DIR}/${DB_FILE_NAME}
   ...  from_user=testuser  from_prompt=$
   ...  from_password=ironport
   ...  to_host=${DUT}  to_location=/data/db  recursive=-r
   ...  timeout=1300
   Start Reporting Services
   ${result}= 	Wait Until Ready  120
   Log  ${result}

Recover DB
   Stop Reporting Services
   Run On DUT  mv /data/db/reporting /data/db/reporting.old
   Run On DUT  mv /data/db/reporting.orig /data/db/reporting
   Start Reporting Services

Get Reporting Stats
    [Arguments]  ${stat_req}
    ...  ${dut_api_port}=${API_HTTPS_port}
    ...  ${prot}=https
    ...  ${user}=${DUT_ADMIN}
    ...  ${pwd}=${DUT_ADMIN_SSW_PASSWORD}
    ...  ${use_base64_auth}=${False}
    ...  ${version}=v1.0
    ...  ${auth_mode}=Basic
    ...  ${options}=${EMPTY}
    [Documentation]  Get appliance reporting stats using REST API
    ...  dut_api_port - Appliance port to connect to
    ...  prot - Protocol to be used for connection. http/https
    ...  user - Appliance username
    ...  pwd - Appliance password
    ...  use_base64_auth - do password base64 encoding
    ...  version - API version
    ...  auth_mode - authentication mode
    ...  options - Reporting stats options
    ${uri}=  Set Variable  ${prot}://${DUT}:${dut_api_port}/api/${version}/stats/${stat_req}
    ${final_uri}=  Set Variable If  '${options}' == '${EMPTY}'  ${uri}  ${uri}?${options}
    ${return_uri} =  Set Variable If  '${options}' == '${EMPTY}'
    ...  /api/${version}/stats/${stat_req}
    ...  /api/${version}/stats/${stat_req}?${options}

    ${encoded_auth}=  Base64 Encode  ${user}:${pwd}
    ${headers}=  Set Variable  Authorization: ${auth_mode} ${encoded_auth}
    ${resp_dict1}  ${api_output1}=  Run Keyword If  ${use_base64_auth}  Send API Request
    ...  ${final_uri}
    ...  headers=${headers}
    ${resp_dict2}  ${api_output2}=  Run Keyword Unless  ${use_base64_auth}  Send API Request
    ...  ${final_uri}
    ...  credentials=${user}:${pwd}
    ...  ntlm_mode=${auth_mode}
    ${resp_dict}=  Set Variable If  ${use_base64_auth}  ${resp_dict1}  ${resp_dict2}
    ${api_output}=  Set Variable If  ${use_base64_auth}  ${api_output1}  ${api_output2}
    [Return]  ${resp_dict}  ${api_output}  ${return_uri}

Get Health Stats Using API
    [Arguments]  ${stat_req}=${EMPTY}
    ...  ${dut_api_port}=${API_HTTPS_port}
    ...  ${prot}=https
    ...  ${user}=${DUT_ADMIN}
    ...  ${pwd}=${DUT_ADMIN_SSW_PASSWORD}
    ...  ${use_base64_auth}=${False}
    ...  ${version}=v1.0
    ...  ${auth_mode}=Basic
    ...  ${option}=${EMPTY}
    [Documentation]  Get appliance health stats using REST API
    ...  dut_api_port - Appliance port to connect to
    ...  prot - Protocol to be used for connection. http/https
    ...  user - Appliance username
    ...  pwd - Appliance password
    ...  use_base64_auth - do password base64 encoding
    ...  version - API version
    ...  auth_mode - authentication mode
    ${uri}=  Set Variable  ${prot}://${DUT}:${dut_api_port}/${option}api/${version}/health/${stat_req}
    ${return_uri} =  Set Variable  /api/${version}/health/${stat_req}

    ${encoded_auth}=  Base64 Encode  ${user}:${pwd}
    ${headers}=  Set Variable  Authorization: ${auth_mode} ${encoded_auth}
    ${resp_dict1}  ${api_output1}=  Run Keyword If  ${use_base64_auth}  Send API Request
    ...  ${uri}
    ...  headers=${headers}
    ${resp_dict2}  ${api_output2}=  Run Keyword Unless  ${use_base64_auth}  Send API Request
    ...  ${uri}
    ...  credentials=${user}:${pwd}
    ...  ntlm_mode=basic
    ${resp_dict}=  Set Variable If  ${use_base64_auth}  ${resp_dict1}  ${resp_dict2}
    ${api_output}=  Set Variable If  ${use_base64_auth}  ${api_output1}  ${api_output2}
    [Return]  ${resp_dict}  ${api_output}  ${return_uri}

Get Current Health Stats
    [Documentation]  Get Current Health Statistics
    ${msg_in_workq}=  Status Get Gauge  messages_in_work_queue
    ${msg_in_workq}=  Convert To Integer  ${msg_in_workq}
    ${ram_util}=  Status Get Gauge  ram_utilization
    ${ram_util}=  Convert To Integer  ${ram_util}
    ${cpu_util}=  Status Get Gauge  cpu_utilization_total
    ${cpu_util}=  Convert To Integer  ${cpu_util}
    ${res_con}=  Status Get Gauge  resource_conservation
    ${res_con}=  Convert To Integer  ${res_con}
    ${disk_io}=  Status Get Gauge  disk_io_utilization
    ${disk_io}=  Convert To Integer  ${disk_io}
    ${msg_in_quar}=  Status Get Gauge  messages_in_quarantine
    ${msg_in_quar}=  Convert To Integer  ${msg_in_quar}
    ${queue_used}=  Status Get Gauge  kilobytes_used
    ${queue_used}=  Replace String  ${queue_used}  ,  ${EMPTY}
    ${queue_free}=  Status Get Gauge  kilobytes_free
    ${queue_free}=  Replace String  ${queue_free}  ,  ${EMPTY}
    ${queue_util}=  Evaluate  (float(${queue_used})*100)/(${queue_used}+${queue_free})
    ${swap_util}=  Get Swap Usage
    ${del_stat}=  Status Get Rate  delivered_recipients
    ${del_stat}=  Convert To Integer  ${del_stat}
    ${del_stat_detl}=  Status Get Counter  delivered_recipients
    ${del_stat_detl}=  Convert To Integer  ${del_stat_detl}
    ${rst_count}=  Status Get System  last_counter_reset
    ${retry_del}=  Status Get Gauge  unattempted_recipients
    ${sys_stat}=  Status Get System  system_status

    ${health_ctr}=  Create Dictionary
    ...  messages_in_workqueue  ${msg_in_workq}
    ...  percentage_ram_utilization  ${ram_util}
    ...  percentage_cpu_load  ${cpu_util}
    ...  resource_conservation  ${res_con}
    ...  messages_in_pvo_quarantines  ${msg_in_quar}
    ...  percentage_diskio  ${disk_io}
    ...  percentage_queue_utilization  ${queue_util}
    ...  percentage_queue_utilization  ${queue_util}
    ...  percentage_swap_utilization  ${swap_util}
    ...  delivery_status  ${del_stat}
    ...  delivery_status_detail  ${del_stat_detl}
    ...  reset_counters  ${rst_count}
    ...  retry_delivery  ${retry_del}
    ...  system_status  ${sys_stat}
    LOG  ${health_ctr}
    [Return]  ${health_ctr}

Enable AS AV OF DLP AMP URL Encryption Services
    ${antispam_enabled}=  Antispam Is Enabled  Ironport
    Run Keyword If  not ${antispam_enabled}  AntiSpam Enable  Ironport
    ${sophos_state}=  Antivirus Is Enabled  Sophos
    Run Keyword If  not ${sophos_state}  AntiVirus Enable  Sophos
    ${of_status}=  Outbreak Filters Is Enabled
    Run Keyword If  not ${of_status}  Outbreak Filters Enable
    ${is_dlp_enabled}=  DLP Is Enabled
    Run Keyword If  not ${is_dlp_enabled}  Dlp Enable  dlp_mode=RSA Email DLP
    ${amp_enabled}=  Advancedmalware Is Enabled
    Run Keyword If  not ${amp_enabled}  Advancedmalware Enable
    ${url_enabled}=  Url Filtering Is Enabled
    Run Keyword If  not ${url_enabled}  Url Filtering Enable
    # configure ESA for mail encryption
    ${iee_state}=  IronPort Email Encryption Is Enabled
    Run Keyword If  not ${iee_state}  IronPort Email Encryption Enable
    Ironport Email Encryption Edit Settings  email_address=admin@${CLIENT_HOSTNAME}
    Ironport Email Encryption Add Profile
    ...  ${ENC_PROFILE_NAME1}
    ...  key_service_type=Cisco IronPort Encryption Appliance (in network)
    ...  internal_url=https://${PXE_SERVER}
    ...  external_url=https://${PXE_SERVER}
    Commit Changes

Enable AS Marketing
    [Arguments]  ${marketing}
    ${as1_settings}=  Create Dictionary
    ...  Anti-Spam Scanning           Use IronPort Anti-Spam service
    ...  Use IronPort Anti-Spam       ${True}
    ...  Enable Suspected Spam Scanning  Yes
    ...  Enable Marketing Email Scanning  Yes
    ...  Positive Spam Apply Action   Spam Quarantine
    ...  Suspected Spam Apply Action  Spam Quarantine

    ${as2_settings}=  Create Dictionary
    ...  Anti-Spam Scanning           Use IronPort Anti-Spam service
    ...  Use IronPort Anti-Spam       ${True}
    ...  Enable Suspected Spam Scanning  Yes
    ...  Positive Spam Apply Action   Spam Quarantine
    ...  Suspected Spam Apply Action  Spam Quarantine

    ${as_settings}=  Set Variable If  ${marketing}
    ...  ${as1_settings}  ${as2_settings}

    Mail Policies Edit Antispam  incoming  default  ${as_settings}

Enable AS AV OF AMP CF On Incoming Policy
    [Arguments]  ${marketing}=${True}
    # Edit antispam settings
    Enable AS Marketing  ${marketing}

    # Edit antivirus settings
    ${av_settings}=  Create Dictionary
    ...  Anti-Virus Scanning                   Yes
    ...  Use Sophos Anti-Virus                 ${True}
    ...  Message Scanning Action               Scan for Viruses only
    ...  Encrypted Messages Apply Action       Quarantine
    ...  Unscannable Messages Apply Action     Deliver As Is
    ...  Virus Infected Messages Apply Action  Quarantine
    Mail Policies Edit Antivirus  incoming  default  ${av_settings}

    # Edit AMP settings
    ${settings}=    Create Dictionary
    ...  Advanced Malware Protection  Yes
    ...  Enable File Analysis  ${True}
    ...  Include an X-header  ${True}
    ...  Messages with Malware Attachments Apply Action  Deliver As Is
    ...  Messages with Malware Attachments Archive Original  Yes
    ...  Messages with Malware Attachments Drop Malware  No
    Mail Policies Edit Advanced Malware Protection  incoming  default  ${settings}

    # Create an incoming content filter '${INCOMING_CF1}' to scan incoming mails
    # coming from a specific sender and send that mail to Policy Quarantine
    ${envelope_sender_action}=  Create Dictionary
    ...  Send message to quarantine  ${QUARANTINE1}
    ${contfilt1_action}=  Content Filter Create Actions
    ...  Quarantine  ${envelope_sender_action}
    ${envelope_sender_cond}=  Create Dictionary
    ...  Envelope Sender      Equals incomingsender@${CLIENT}
    ${contfilt1_condition}=    Content Filter Create Conditions
    ...  Envelope Sender      ${envelope_sender_cond}
    Content Filter Add  Incoming
    ...  ${INCOMING_CF1}
    ...  TestFilter1
    ...  ${contfilt1_action}
    ...  ${contfilt1_condition}

    # Create a content filter for URL scanning
    ${action_value}  Create Dictionary
    ...   Untrusted Reputation URL  None
    ...   Defang Reputation URL  None
    ${actions}  Content Filter Create Actions
    ...  URL Reputation Action  ${action_value}
    Content Filter Add  Incoming
    ...  ${INCOMING_CF2}
    ...  ${INCOMING_CF2}  ${actions}
    ${url_settings}=    Create Dictionary
    ...  Content Filters  Enable Content Filters (Customize settings)
    ...  ${INCOMING_CF1}  ${True}
    ...  ${INCOMING_CF2}  ${True}
    Mail Policies Edit Content Filters  incoming  default  ${url_settings}

    # Edit outbreak settings
    ${vof_settings}=  Create Dictionary
    ...  Outbreak Filters  Enable Outbreak Filtering (Customize settings)
    ...  Quarantine Threat Level  3
    ...  Maximum Quarantine Retention for Viral Attachments  1 days
    ...  Maximum Quarantine Retention for Other Threats  4 Hours
    ...  Enable Message Modification  ${True}
    Mail Policies Edit Outbreak Filters  incoming  default  ${vof_settings}

    Commit Changes

Enable AV DLP Enc CF TLS On Outgoing Policy
    # Edit antivirus settings
    ${av_settings}=  Create Dictionary
    ...  Anti-Virus Scanning                   Yes
    ...  Use Sophos Anti-Virus                 ${True}
    ...  Message Scanning Action               Scan for Viruses only
    ...  Encrypted Messages Apply Action       Quarantine
    ...  Unscannable Messages Apply Action     Deliver As Is
    ...  Virus Infected Messages Apply Action  Quarantine
    Mail Policies Edit Antivirus  outgoing  default  ${av_settings}

    # Add a new DLP action for all the above policies
    DLP Message Action Edit  Default Action
    ...  msg_action=Deliver  enable_encryption=${True}
    ...  encryption_profile=${ENC_PROFILE_NAME1}
    ...  encrypted_msg_subject=Message is encrypted
    #Create DLP Policy  Privacy Protection  Credit Card Numbers
    DLP Policy New  Privacy Protection  Credit Card Numbers
    ...  change_policy_name=${DLP_POLICY1}  submit=${True}
    ${outgoing_dlp_policy_settings}=  Create Dictionary
    ...  DLP Policies  Enable DLP (Customize settings)
    ...  ${DLP_POLICY1}  ${True}
    Mail Policies Edit Dlp  outgoing  default  ${outgoing_dlp_policy_settings}

    # Create an outgoinging content filter named '${OUTGOING_CF1}' to scan outgoing
    # mails coming from a specific sender and send to user-quarantine
    ${envelope_sender_action}=  Create Dictionary
    ...  Send message to quarantine  ${QUARANTINE1}
    ${obfilter_action}=  Content Filter Create Actions
    ...  Quarantine  ${envelope_sender_action}
    ${envelope_sender_cond}=  Create Dictionary
    ...  Envelope Sender  Equals outgoingsender@${CLIENT}
    ${obfilter_condition}=  Content Filter Create Conditions
    ...  Envelope Sender      ${envelope_sender_cond}
    Content Filter Add  Outgoing
    ...  ${OUTGOING_CF1}
    ...  Test Outgoing Filter1
    ...  ${obfilter_action}
    ...  ${obfilter_condition}
    ${outgoing_content_filters}=  Create Dictionary
    ...  Content Filters  Enable Content Filters (Customize settings)
    ...  ${OUTGOING_CF1}  ${True}
    Mail Policies Edit Content Filters  outgoing  default
    ...  ${outgoing_content_filters}

    # Configure TLS
    ${tls_settings}=  Mail Flow Policies Create Settings
    ...  TLS  Preferred
    Mail Flow Policies Edit  OutBoundMail  RELAYED  ${tls_settings}

    Commit Changes

Disable Services On Outgoing Policy
    # Disable AntiVirus
    ${av_settings} =  Create Dictionary
    ...  Anti-Virus Scanning  No
    Mail Policies Edit Antivirus  outgoing  default  ${av_settings}

    # Disable DLP
    ${dlp_settings}=  Create Dictionary
    ...  DLP Policies  Disable DLP
    ...  ${DLP_POLICY1}  ${False}
    Mail Policies Edit Dlp  outgoing  default  ${dlp_settings}
    DLP Message Action Edit  Default Action  msg_action=Deliver
    DLP Policy Delete  ${DLP_POLICY1}

    # Delete CF
    ${cf_settings}=  Create Dictionary
    ...  Content Filters  Disable Content Filters
    Mail Policies Edit Content Filters  outgoing  default  ${cf_settings}
    Content Filter Delete  outgoing  ${OUTGOING_CF1}

    # Turn Off TLS
    ${tls_settings}=  Mail Flow Policies Create Settings
    ...  TLS  Off
    Mail Flow Policies Edit  OutBoundMail  RELAYED  ${tls_settings}

    Commit Changes

Disable Services On Incoming Policy
    # Disable Antispam
    ${as_settings}=  Create Dictionary
    ...  Anti-Spam Scanning  Disabled
    Mail Policies Edit Antispam  incoming  default  ${as_settings}

    # Disable Antivirus
    ${av_settings} =  Create Dictionary
    ...  Anti-Virus Scanning  No
    Mail Policies Edit Antivirus  incoming  default  ${av_settings}

    # Disable AMP
    ${amp_settings}=  Create Dictionary
    ...  Advanced Malware Protection  No
    Mail Policies Edit Advanced Malware Protection
    ...  incoming  default  ${amp_settings}

    # Delete CF
    ${cf_settings}=  Create Dictionary
    ...  Content Filters  Disable Content Filters
    Mail Policies Edit Content Filters  incoming  default  ${cf_settings}
    Content Filter Delete  incoming  ${INCOMING_CF1}
    Content Filter Delete  incoming  ${INCOMING_CF2}

    # Disable OF
    ${of_settings}=  Create Dictionary
    ...  Outbreak Filters  Disable Outbreak Filtering
    Mail Policies Edit Outbreak Filters
    ...  incoming  default  ${of_settings}

    Commit Changes

Disable AS AV OF DLP AMP URL Encryption Services
    # Disable Encryption
    Ironport Email Encryption Delete Profile  ${ENC_PROFILE_NAME1}
    Ironport Email Encryption Disable

    # Disable URL
    Url Filtering Disable

    # Disable AMP
    Advancedmalware Disable  file_reputation

    # Disable DLP
    ${is_dlp_enabled}=  DLP Is Enabled
    Run Keyword If  ${is_dlp_enabled}  DLP Disable

    # Disable OF
    Outbreak Filters Disable

    # Disable AV
    ${av_state}=  Antivirus Is Enabled  Sophos
    Run Keyword If  ${av_state} == ${True}
    ...  Antivirus Disable  Sophos

    # Disable AS
    Antispam Disable  Ironport

    Commit Changes

Verify API Health Values From Status Values
    [Arguments]  ${api_health1}
    ${api_health} =  Get From Dictionary  ${api_health1}  data
    ${current_health_dict}=  Get Current Health Stats
    LOG  ${current_health_dict}
    ${varying_values}=  Create List
    ...  percentage_swap_utilization  percentage_queue_utilization
    ${static_values}=  Create List
    ...  resource_conservation  messages_in_workqueue
    ...  messages_in_pvo_quarantines
    @{keys}=  Get Dictionary Keys  ${api_health}
    FOR  ${param}  IN   @{keys}
        ${api_value}=  Get From Dictionary  ${api_health}  ${param}
        ${stat_value}=  Get From Dictionary  ${current_health_dict}  ${param}
        ${index}=  Get Index From List  ${varying_values}  ${param}
    # Since accurate comparing may not work out for these values, the api value
    # returned should be within +/- 5% of current status value
        ${vary_index}=  Get Index From List  ${varying_values}  ${param}
        ${static_index}=  Get Index From List  ${static_values}  ${param}
        ${check_value}=  Run Keyword If  '${vary_index}'!='-1'
        ...  Evaluate  ${stat_value}*0.95<=${api_value}<=${stat_value}*1.05
        Run Keyword If  '${vary_index}'!='-1'
        ...  Should Be True  ${check_value}
        Run Keyword If  '${static_index}'!='-1'
        ...  Should Be Equal  ${api_value}  ${stat_value}
    END

